{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variables": {
      "main": [
        [
          {
            "node": "Get many workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many workflows": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "Create a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a file": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        []
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-29T14:22:53.112Z",
  "id": "RlGLz8JEnfMjuSjR",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "*Back Up Chatflows",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        496
      ],
      "id": "146b950d-b3f2-423c-9e3f-2a7efa00a641",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        688
      ],
      "id": "196a583c-8c4f-4b22-939c-1f089748b162",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d4907f1-fcfe-47eb-b442-d53065c7dcab",
              "name": "repo.owner",
              "value": "carlos-escarcena",
              "type": "string"
            },
            {
              "id": "38071e91-fb1e-4172-913a-a99a797da8b3",
              "name": "repo.name",
              "value": "N8N-Workflows",
              "type": "string"
            },
            {
              "id": "29798405-9a41-4848-b023-995ef65c18cf",
              "name": "repo.path",
              "value": "workflows/",
              "type": "string"
            },
            {
              "id": "0aa2ab93-36e2-4073-b281-da183191e373",
              "name": "url",
              "value": "https://github.com/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        496
      ],
      "id": "fb572871-924e-48e9-8f11-0b24c548f393",
      "name": "Variables"
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        448,
        496
      ],
      "id": "6150e0ba-d9be-4eb7-90ef-603bb69a4a5a",
      "name": "Get many workflows",
      "credentials": {
        "n8nApi": {
          "id": "vFzxSxyoIxlIFw7v",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1120,
        528
      ],
      "id": "3878f307-e741-4bf1-855f-7693bf9e0ce4",
      "name": "Merge"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "same",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "095cf813-c4fe-459e-a24f-f7cc6e5912df"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "0"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4f8edb63-36c4-4957-9ac4-0299998b4ac0",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "different",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bee5400a-3afe-4518-893d-86cb16968290",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "new",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        1568,
        512
      ],
      "id": "7f718099-870b-4b7d-bb50-08cd71d9ba6e",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1792,
        304
      ],
      "id": "c804e146-84dc-4bb8-ae44-65bd7d5844d3",
      "name": "same"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1792,
        496
      ],
      "id": "b6d046c2-6346-4d05-9f48-efc35a17a143",
      "name": "different"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1792,
        688
      ],
      "id": "6d920393-f5da-4ba3-b522-5a6941553f24",
      "name": "new"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Variables').item.json.repo.path }}{{ $('OneAtATime').item.json.name }}.json",
        "fileContent": "={{ $node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{ $('OneAtATime').item.json.name }}.json ({{ $json[\"github_status\"] }})"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        2016,
        960
      ],
      "id": "83fca7e5-bf62-4080-b49f-7ad39c792f89",
      "name": "Create a file",
      "webhookId": "b249633f-c31a-487e-b16f-429be2d73dfe",
      "credentials": {
        "githubApi": {
          "id": "RL5eAD7XhVDQCuva",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1344,
        528
      ],
      "id": "48150b82-159c-4312-8ab9-f48318e7c838",
      "name": "isDiffOrNew"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        496
      ],
      "id": "a3864840-40dd-41cf-82d4-473e93d6684a",
      "name": "OneAtATime"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{ $('Variables').item.json.repo.path }}{{$json.name}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "82d1c5f9-61c7-49f9-9c95-5d8a719cace9",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        896,
        464
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "8d19db5a-55d7-4deb-b891-d05e1c8e5658",
      "credentials": {
        "githubApi": {
          "id": "RL5eAD7XhVDQCuva",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Variables').item.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{ $('Variables').item.json.repo.path }}{{ $('OneAtATime').item.json.name }}.json",
        "fileContent": "={{ $node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{ $('OneAtATime').item.json.name }}.json ({{ $json[\"github_status\"] }})"
      },
      "id": "55a1f57a-c268-4273-a6be-8b31bc24771b",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        2016,
        768
      ],
      "typeVersion": 1,
      "webhookId": "4b8995b9-6042-4f87-b17d-3c226a1651fc",
      "credentials": {
        "githubApi": {
          "id": "RL5eAD7XhVDQCuva",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "6834483413",
        "text": "[N8N Backup]: El backup de tus Workflows se ha guardado correctamente!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        272
      ],
      "id": "cabec748-ee8d-443b-8c14-b557ac8fc59e",
      "name": "Send a text message",
      "webhookId": "4bd686c2-eb54-4091-b96d-c42a2f88f4c4",
      "credentials": {
        "telegramApi": {
          "id": "siGay3O6aJkHIJfz",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        896,
        272
      ],
      "id": "586b9044-a6b6-412d-a83f-66e243ba2d83",
      "name": "Limit"
    },
    {
      "parameters": {
        "method": "POST",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        176,
        272
      ],
      "id": "849459a7-26d4-423c-8e5d-4893c7b4f0f8",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Australia/Perth",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false,
    "errorWorkflow": "EYX2BC4I0DolsgK7",
    "timeSavedPerExecution": 15
  },
  "shared": [
    {
      "createdAt": "2025-10-29T14:22:53.123Z",
      "updatedAt": "2025-10-29T14:22:53.123Z",
      "role": "workflow:owner",
      "workflowId": "RlGLz8JEnfMjuSjR",
      "projectId": "1hPYqGN0htWyJ6V9"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-29T14:24:50.000Z",
  "versionId": "c173ac36-4265-42ea-82bd-f4906ea6555b"
}